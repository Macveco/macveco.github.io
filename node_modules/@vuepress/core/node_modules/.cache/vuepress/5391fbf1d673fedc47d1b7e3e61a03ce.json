{"remainingRequest":"/home/mvco/workspace/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/mvco/workspace/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/mvco/workspace/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/home/mvco/workspace/blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/mvco/workspace/blog/docs/ch10-02-traits.md?vue&type=template&id=21398c80&","dependencies":[{"path":"/home/mvco/workspace/blog/docs/ch10-02-traits.md","mtime":1605854354000},{"path":"/home/mvco/workspace/blog/node_modules/cache-loader/dist/cjs.js","mtime":1606019031847},{"path":"/home/mvco/workspace/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606019032510},{"path":"/home/mvco/workspace/blog/node_modules/cache-loader/dist/cjs.js","mtime":1606019031847},{"path":"/home/mvco/workspace/blog/node_modules/vue-loader/lib/index.js","mtime":1606019032510},{"path":"/home/mvco/workspace/blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1606019031543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ContentSlotsDistributor",
    { attrs: { "slot-key": _vm.$parent.slotKey } },
    [
      _c("h2", { attrs: { id: "trait-定义共享的行为" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#trait-定义共享的行为" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" trait：定义共享的行为")
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://github.com/rust-lang/book/blob/master/src/ch10-02-traits.md",
                target: "_blank",
                rel: "noopener noreferrer"
              }
            },
            [_vm._v("ch10-02-traits.md"), _c("OutboundLink")],
            1
          ),
          _vm._v(" "),
          _c("br"),
          _vm._v("\ncommit 34b403864ad9c5e27b00b7cc4a6893804ef5b989")
        ])
      ]),
      _vm._v(" "),
      _c("p", [
        _c("em", [_vm._v("trait")]),
        _vm._v(
          " 告诉 Rust 编译器某个特定类型拥有可能与其他类型共享的功能。可以通过 trait 以一种抽象的方式定义共享的行为。可以使用 "
        ),
        _c("em", [_vm._v("trait bounds")]),
        _vm._v(" 指定泛型是任何拥有特定行为的类型。")
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [
          _vm._v("注意："),
          _c("em", [_vm._v("trait")]),
          _vm._v(" 类似于其他语言中的常被称为 "),
          _c("strong", [_vm._v("接口")]),
          _vm._v("（"),
          _c("em", [_vm._v("interfaces")]),
          _vm._v("）的功能，虽然有一些不同。")
        ])
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "定义-trait" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#定义-trait" } },
          [_vm._v("#")]
        ),
        _vm._v(" 定义 trait")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "一个类型的行为由其可供调用的方法构成。如果可以对不同类型调用相同的方法的话，这些类型就可以共享相同的行为了。trait 定义是一种将方法签名组合起来的方法，目的是定义一个实现某些目的所必需的行为的集合。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("例如，这里有多个存放了不同类型和属性文本的结构体：结构体 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 用于存放发生于世界各地的新闻故事，而结构体 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(
          " 最多只能存放 280 个字符的内容，以及像是否转推或是否是对推友的回复这样的元数据。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("我们想要创建一个多媒体聚合库用来显示可能储存在 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 或 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(
          " 实例中的数据的总结。每一个结构体都需要的行为是他们是能够被总结的，这样的话就可以调用实例的 "
        ),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 方法来请求总结。示例 10-12 中展示了一个表现这个概念的 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 的定义：")
      ]),
      _vm._v(" "),
      _c("p", [
        _c("span", { staticClass: "filename" }, [_vm._v("文件名: src/lib.rs")])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-rust" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("trait")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Summary")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("summarize")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _c("span", { staticClass: "caption" }, [
          _vm._v("示例 10-12："),
          _c("code", [_vm._v("Summary")]),
          _vm._v(" trait 定义，它包含由 "),
          _c("code", [_vm._v("summarize")]),
          _vm._v(" 方法提供的行为")
        ])
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("这里使用 "),
        _c("code", [_vm._v("trait")]),
        _vm._v(" 关键字来声明一个 trait，后面是 trait 的名字，在这个例子中是 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(
          "。在大括号中声明描述实现这个 trait 的类型所需要的行为的方法签名，在这个例子中是 "
        ),
        _c("code", [_vm._v("fn summarize(&self) -> String")]),
        _vm._v("。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "在方法签名后跟分号，而不是在大括号中提供其实现。接着每一个实现这个 trait 的类型都需要提供其自定义行为的方法体，编译器也会确保任何实现 "
        ),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 的类型都拥有与这个签名的定义完全一致的 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 方法。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("trait 体中可以有多个方法：一行一个方法签名且都以分号结尾。")
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "为类型实现-trait" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#为类型实现-trait" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 为类型实现 trait")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("现在我们定义了 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(
          " trait，接着就可以在多媒体聚合库中需要拥有这个行为的类型上实现它了。示例 10-13 中展示了 "
        ),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 结构体上 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 的一个实现，它使用标题、作者和创建的位置作为 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 的返回值。对于 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 结构体，我们选择将 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(
          " 定义为用户名后跟推文的全部文本作为返回值，并假设推文内容已经被限制为 280 字符以内。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _c("span", { staticClass: "filename" }, [_vm._v("文件名: src/lib.rs")])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-rust" } }, [
          _c("code", [
            _vm._v("# "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("trait")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Summary")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n#     "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("summarize")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n# "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n#\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("struct")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token type-definition class-name" }
              },
              [_vm._v("NewsArticle")]
            ),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" headline"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" location"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" author"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" content"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("impl")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Summary")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("for")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("NewsArticle")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("summarize")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n        "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("format!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"{}, by {} ({})"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("headline"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("author"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("location"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("struct")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token type-definition class-name" }
              },
              [_vm._v("Tweet")]
            ),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" username"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" content"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" reply"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("bool")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" retweet"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("bool")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("impl")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Summary")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("for")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Tweet")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("summarize")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n        "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("format!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"{}: {}"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("username"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("content"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _c("span", { staticClass: "caption" }, [
          _vm._v("示例 10-13：在 "),
          _c("code", [_vm._v("NewsArticle")]),
          _vm._v(" 和 "),
          _c("code", [_vm._v("Tweet")]),
          _vm._v(" 类型上实现 "),
          _c("code", [_vm._v("Summary")]),
          _vm._v(" trait")
        ])
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("在类型上实现 trait 类似于实现与 trait 无关的方法。区别在于 "),
        _c("code", [_vm._v("impl")]),
        _vm._v(" 关键字之后，我们提供需要实现 trait 的名称，接着是 "),
        _c("code", [_vm._v("for")]),
        _vm._v(" 和需要实现 trait 的类型的名称。在 "),
        _c("code", [_vm._v("impl")]),
        _vm._v(
          " 块中，使用 trait 定义中的方法签名，不过不再后跟分号，而是需要在大括号中编写函数体来为特定类型实现 trait 方法所拥有的行为。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("一旦实现了 trait，我们就可以用与 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 实例的非 trait 方法一样的方式调用 trait 方法了：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              'let tweet = Tweet {\n    username: String::from("horse_ebooks"),\n    content: String::from("of course, as you probably already know, people"),\n    reply: false,\n    retweet: false,\n};\n\nprintln!("1 new tweet: {}", tweet.summarize());\n'
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("这会打印出 "),
        _c("code", [
          _vm._v(
            "1 new tweet: horse_ebooks: of course, as you probably already know, people"
          )
        ]),
        _vm._v("。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("注意因为示例 10-13 中我们在相同的 "),
        _c("em", [_vm._v("lib.rs")]),
        _vm._v(" 里定义了 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 和 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 与 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 类型，所以他们是位于同一作用域的。如果这个 "),
        _c("em", [_vm._v("lib.rs")]),
        _vm._v(" 是对应 "),
        _c("code", [_vm._v("aggregator")]),
        _vm._v(
          " crate 的，而别人想要利用我们 crate 的功能为其自己的库作用域中的结构体实现 "
        ),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait。首先他们需要将 trait 引入作用域。这可以通过指定 "),
        _c("code", [_vm._v("use aggregator::Summary;")]),
        _vm._v(" 实现，这样就可以为其类型实现 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 了。"),
        _c("code", [_vm._v("Summary")]),
        _vm._v(
          " 还必须是公有 trait 使得其他 crate 可以实现它，这也是为什么实例 10-12 中将 "
        ),
        _c("code", [_vm._v("pub")]),
        _vm._v(" 置于 "),
        _c("code", [_vm._v("trait")]),
        _vm._v(" 之前。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "实现 trait 时需要注意的一个限制是，只有当 trait 或者要实现 trait 的类型位于 crate 的本地作用域时，才能为该类型实现 trait。例如，可以为 "
        ),
        _c("code", [_vm._v("aggregator")]),
        _vm._v(" crate 的自定义类型 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 实现如标准库中的 "),
        _c("code", [_vm._v("Display")]),
        _vm._v(" trait，这是因为 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 类型位于 "),
        _c("code", [_vm._v("aggregator")]),
        _vm._v(" crate 本地的作用域中。类似地，也可以在 "),
        _c("code", [_vm._v("aggregator")]),
        _vm._v(" crate 中为 "),
        _c("code", [_vm._v("Vec<T>")]),
        _vm._v(" 实现 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v("，这是因为 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 位于 "),
        _c("code", [_vm._v("aggregator")]),
        _vm._v(" crate 本地作用域中。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("但是不能为外部类型实现外部 trait。例如，不能在 "),
        _c("code", [_vm._v("aggregator")]),
        _vm._v(" crate 中为 "),
        _c("code", [_vm._v("Vec<T>")]),
        _vm._v(" 实现 "),
        _c("code", [_vm._v("Display")]),
        _vm._v(" trait。这是因为 "),
        _c("code", [_vm._v("Display")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("Vec<T>")]),
        _vm._v(" 都定义于标准库中，它们并不位于 "),
        _c("code", [_vm._v("aggregator")]),
        _vm._v(" crate 本地作用域中。这个限制是被称为 "),
        _c("strong", [_vm._v("相干性")]),
        _vm._v("（"),
        _c("em", [_vm._v("coherence")]),
        _vm._v("） 的程序属性的一部分，或者更具体的说是 "),
        _c("strong", [_vm._v("孤儿规则")]),
        _vm._v("（"),
        _c("em", [_vm._v("orphan rule")]),
        _vm._v(
          "），其得名于不存在父类型。这条规则确保了其他人编写的代码不会破坏你代码，反之亦然。没有这条规则的话，两个 crate 可以分别对相同类型实现相同的 trait，而 Rust 将无从得知应该使用哪一个实现。"
        )
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "默认实现" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#默认实现" } },
          [_vm._v("#")]
        ),
        _vm._v(" 默认实现")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "有时为 trait 中的某些或全部方法提供默认的行为，而不是在每个类型的每个实现中都定义自己的行为是很有用的。这样当为某个特定类型实现 trait 时，可以选择保留或重载每个方法的默认行为。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("示例 10-14 中展示了如何为 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 的 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(
          " 方法指定一个默认的字符串值，而不是像示例 10-12 中那样只是定义方法签名："
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _c("span", { staticClass: "filename" }, [_vm._v("文件名: src/lib.rs")])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-rust" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("trait")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Summary")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("summarize")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n        "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("::")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("from")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"(Read more...)"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _c("span", { staticClass: "caption" }, [
          _vm._v("示例 10-14："),
          _c("code", [_vm._v("Summary")]),
          _vm._v(" trait 的定义，带有一个 "),
          _c("code", [_vm._v("summarize")]),
          _vm._v(" 方法的默认实现")
        ])
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("如果想要对 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 实例使用这个默认实现，而不是定义一个自己的实现，则可以通过 "),
        _c("code", [_vm._v("impl Summary for NewsArticle {}")]),
        _vm._v(" 指定一个空的 "),
        _c("code", [_vm._v("impl")]),
        _vm._v(" 块。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("虽然我们不再直接为 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 定义 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 方法了，但是我们提供了一个默认实现并且指定 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 实现 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait。因此，我们仍然可以对 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 实例调用 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 方法，如下所示：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              'let article = NewsArticle {\n    headline: String::from("Penguins win the Stanley Cup Championship!"),\n    location: String::from("Pittsburgh, PA, USA"),\n    author: String::from("Iceburgh"),\n    content: String::from("The Pittsburgh Penguins once again are the best\n    hockey team in the NHL."),\n};\n\nprintln!("New article available! {}", article.summarize());\n'
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("这段代码会打印 "),
        _c("code", [_vm._v("New article available! (Read more...)")]),
        _vm._v("。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("为 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 创建默认实现并不要求对示例 10-13 中 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 上的 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(
          " 实现做任何改变。其原因是重载一个默认实现的语法与实现没有默认实现的 trait 方法的语法一样。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "默认实现允许调用相同 trait 中的其他方法，哪怕这些方法没有默认实现。如此，trait 可以提供很多有用的功能而只需要实现指定一小部分内容。例如，我们可以定义 "
        ),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait，使其具有一个需要实现的 "),
        _c("code", [_vm._v("summarize_author")]),
        _vm._v(" 方法，然后定义一个 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 方法，此方法的默认实现调用 "),
        _c("code", [_vm._v("summarize_author")]),
        _vm._v(" 方法：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-rust" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("pub")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("trait")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Summary")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("summarize_author")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("summarize")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n        "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("format!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"(Read more from {}...)"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("summarize_author")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("为了使用这个版本的 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v("，只需在实现 trait 时定义 "),
        _c("code", [_vm._v("summarize_author")]),
        _vm._v(" 即可：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              'impl Summary for Tweet {\n    fn summarize_author(&self) -> String {\n        format!("@{}", self.username)\n    }\n}\n'
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("一旦定义了 "),
        _c("code", [_vm._v("summarize_author")]),
        _vm._v("，我们就可以对 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 结构体的实例调用 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 了，而 "),
        _c("code", [_vm._v("summary")]),
        _vm._v(" 的默认实现会调用我们提供的 "),
        _c("code", [_vm._v("summarize_author")]),
        _vm._v(" 定义。因为实现了 "),
        _c("code", [_vm._v("summarize_author")]),
        _vm._v("，"),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 就提供了 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 方法的功能，且无需编写更多的代码。")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              'let tweet = Tweet {\n    username: String::from("horse_ebooks"),\n    content: String::from("of course, as you probably already know, people"),\n    reply: false,\n    retweet: false,\n};\n\nprintln!("1 new tweet: {}", tweet.summarize());\n'
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("这会打印出 "),
        _c("code", [_vm._v("1 new tweet: (Read more from @horse_ebooks...)")]),
        _vm._v("。")
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("注意无法从相同方法的重载实现中调用默认方法。")]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "trait-作为参数" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#trait-作为参数" } },
          [_vm._v("#")]
        ),
        _vm._v(" trait 作为参数")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "知道了如何定义 trait 和在类型上实现这些 trait 之后，我们可以探索一下如何使用 trait 来接受多种不同类型的参数。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("例如在示例 10-13 中为 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 类型实现了 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait。我们可以定义一个函数 "),
        _c("code", [_vm._v("notify")]),
        _vm._v(" 来调用其参数 "),
        _c("code", [_vm._v("item")]),
        _vm._v(" 上的 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 方法，该参数是实现了 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 的某种类型。为此可以使用 "),
        _c("code", [_vm._v("impl Trait")]),
        _vm._v(" 语法，像这样：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              'pub fn notify(item: impl Summary) {\n    println!("Breaking news! {}", item.summarize());\n}\n'
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("对于 "),
        _c("code", [_vm._v("item")]),
        _vm._v(" 参数，我们指定了 "),
        _c("code", [_vm._v("impl")]),
        _vm._v(
          " 关键字和 trait 名称，而不是具体的类型。该参数支持任何实现了指定 trait 的类型。在 "
        ),
        _c("code", [_vm._v("notify")]),
        _vm._v(" 函数体中，可以调用任何来自 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 的方法，比如 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v("。我们可以传递任何 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 或 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 的实例来调用 "),
        _c("code", [_vm._v("notify")]),
        _vm._v("。任何用其它如 "),
        _c("code", [_vm._v("String")]),
        _vm._v(" 或 "),
        _c("code", [_vm._v("i32")]),
        _vm._v(" 的类型调用该函数的代码都不能编译，因为它们没有实现 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v("。")
      ]),
      _vm._v(" "),
      _c("h4", { attrs: { id: "trait-bound-语法" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#trait-bound-语法" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Trait Bound 语法")
      ]),
      _vm._v(" "),
      _c("p", [
        _c("code", [_vm._v("impl Trait")]),
        _vm._v(
          " 语法适用于直观的例子，它不过是一个较长形式的语法糖。这被称为 "
        ),
        _c("em", [_vm._v("trait bound")]),
        _vm._v("，这看起来像：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              'pub fn notify<T: Summary>(item: T) {\n    println!("Breaking news! {}", item.summarize());\n}\n'
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v(
          "这与之前的例子相同，不过稍微冗长了一些。trait bound 与泛型参数声明在一起，位于尖括号中的冒号后面。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _c("code", [_vm._v("impl Trait")]),
        _vm._v(
          " 很方便，适用于短小的例子。trait bound 则适用于更复杂的场景。例如，可以获取两个实现了 "
        ),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" 的参数。使用 "),
        _c("code", [_vm._v("impl Trait")]),
        _vm._v(" 的语法看起来像这样：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "pub fn notify(item1: impl Summary, item2: impl Summary) {\n"
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("这适用于 "),
        _c("code", [_vm._v("item1")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("item2")]),
        _vm._v(" 允许是不同类型的情况（只要它们都实现了 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(
          "）。不过如果你希望强制它们都是相同类型呢？这只有在使用 trait bound 时才有可能："
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v("pub fn notify<T: Summary>(item1: T, item2: T) {\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("泛型 "),
        _c("code", [_vm._v("T")]),
        _vm._v(" 被指定为 "),
        _c("code", [_vm._v("item1")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("item2")]),
        _vm._v(" 的参数限制，如此传递给参数 "),
        _c("code", [_vm._v("item1")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("item2")]),
        _vm._v(" 值的具体类型必须一致。")
      ]),
      _vm._v(" "),
      _c("h4", { attrs: { id: "通过-指定多个-trait-bound" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#通过-指定多个-trait-bound" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 通过 "),
        _c("code", [_vm._v("+")]),
        _vm._v(" 指定多个 trait bound")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("如果 "),
        _c("code", [_vm._v("notify")]),
        _vm._v(" 需要显示 "),
        _c("code", [_vm._v("item")]),
        _vm._v(" 的格式化形式，同时也要使用 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 方法，那么 "),
        _c("code", [_vm._v("item")]),
        _vm._v(" 就需要同时实现两个不同的 trait："),
        _c("code", [_vm._v("Display")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v("。这可以通过 "),
        _c("code", [_vm._v("+")]),
        _vm._v(" 语法实现：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v("pub fn notify(item: impl Summary + Display) {\n")
          ])
        ])
      ]),
      _c("p", [
        _c("code", [_vm._v("+")]),
        _vm._v(" 语法也适用于泛型的 trait bound：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v("pub fn notify<T: Summary + Display>(item: T) {\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("通过指定这两个 trait bound，"),
        _c("code", [_vm._v("notify")]),
        _vm._v(" 的函数体可以调用 "),
        _c("code", [_vm._v("summarize")]),
        _vm._v(" 并使用 "),
        _c("code", [_vm._v("{}")]),
        _vm._v(" 来格式化 "),
        _c("code", [_vm._v("item")]),
        _vm._v("。")
      ]),
      _vm._v(" "),
      _c("h4", { attrs: { id: "通过-where-简化-trait-bound" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#通过-where-简化-trait-bound" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 通过 "),
        _c("code", [_vm._v("where")]),
        _vm._v(" 简化 trait bound")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "然而，使用过多的 trait bound 也有缺点。每个泛型有其自己的 trait bound，所以有多个泛型参数的函数在名称和参数列表之间会有很长的 trait bound 信息，这使得函数签名难以阅读。为此，Rust 有另一个在函数签名之后的 "
        ),
        _c("code", [_vm._v("where")]),
        _vm._v(" 从句中指定 trait bound 的语法。所以除了这么写：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "fn some_function<T: Display + Clone, U: Clone + Debug>(t: T, u: U) -> i32 {\n"
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("还可以像这样使用 "),
        _c("code", [_vm._v("where")]),
        _vm._v(" 从句：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "fn some_function<T, U>(t: T, u: U) -> i32\n    where T: Display + Clone,\n          U: Clone + Debug\n{\n"
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v(
          "这个函数签名就显得不那么杂乱，函数名、参数列表和返回值类型都离得很近，看起来类似没有很多 trait bounds 的函数。"
        )
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "返回实现了-trait-的类型" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#返回实现了-trait-的类型" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 返回实现了 trait 的类型")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("也可以在返回值中使用 "),
        _c("code", [_vm._v("impl Trait")]),
        _vm._v(" 语法，来返回实现了某个 trait 的类型：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              'fn returns_summarizable() -> impl Summary {\n    Tweet {\n        username: String::from("horse_ebooks"),\n        content: String::from("of course, as you probably already know, people"),\n        reply: false,\n        retweet: false,\n    }\n}\n'
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("通过使用 "),
        _c("code", [_vm._v("impl Summary")]),
        _vm._v(" 作为返回值类型，我们指定了 "),
        _c("code", [_vm._v("returns_summarizable")]),
        _vm._v(" 函数返回某个实现了 "),
        _c("code", [_vm._v("Summary")]),
        _vm._v(" trait 的类型，但是不确定其具体的类型。在这个例子中 "),
        _c("code", [_vm._v("returns_summarizable")]),
        _vm._v(" 返回了一个 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v("，不过调用方并不知情。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "返回一个只是指定了需要实现的 trait 的类型的能力在闭包和迭代器场景十分的有用，第十三章会介绍它们。闭包和迭代器创建只有编译器知道的类型，或者是非常非常长的类型。"
        ),
        _c("code", [_vm._v("impl Trait")]),
        _vm._v(" 允许你简单的指定函数返回一个 "),
        _c("code", [_vm._v("Iterator")]),
        _vm._v(" 而无需写出实际的冗长的类型。")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "不过这只适用于返回单一类型的情况。例如，这段代码的返回值类型指定为返回 "
        ),
        _c("code", [_vm._v("impl Summary")]),
        _vm._v("，但是返回了 "),
        _c("code", [_vm._v("NewsArticle")]),
        _vm._v(" 或 "),
        _c("code", [_vm._v("Tweet")]),
        _vm._v(" 就行不通：")
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "language-rust,ignore,does_not_compile extra-class" },
        [
          _c("pre", { pre: true, attrs: { class: "language-text" } }, [
            _c("code", [
              _vm._v(
                'fn returns_summarizable(switch: bool) -> impl Summary {\n    if switch {\n        NewsArticle {\n            headline: String::from("Penguins win the Stanley Cup Championship!"),\n            location: String::from("Pittsburgh, PA, USA"),\n            author: String::from("Iceburgh"),\n            content: String::from("The Pittsburgh Penguins once again are the best\n            hockey team in the NHL."),\n        }\n    } else {\n        Tweet {\n            username: String::from("horse_ebooks"),\n            content: String::from("of course, as you probably already know, people"),\n            reply: false,\n            retweet: false,\n        }\n    }\n}\n'
              )
            ])
          ])
        ]
      ),
      _c(
        "p",
        [
          _vm._v("这里尝试返回 "),
          _c("code", [_vm._v("NewsArticle")]),
          _vm._v(" 或 "),
          _c("code", [_vm._v("Tweet")]),
          _vm._v("。这不能编译，因为 "),
          _c("code", [_vm._v("impl Trait")]),
          _vm._v(" 工作方式的限制。第十七章的 "),
          _c(
            "RouterLink",
            {
              attrs: {
                to:
                  "/ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types"
              }
            },
            [_vm._v("“为使用不同类型的值而设计的 trait 对象”")]
          ),
          _vm._v(" 部分会介绍如何编写这样一个函数。")
        ],
        1
      ),
      _vm._v(" "),
      _c("h3", { attrs: { id: "使用-trait-bounds-来修复-largest-函数" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#使用-trait-bounds-来修复-largest-函数" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 使用 trait bounds 来修复 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 函数")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "现在你知道了如何使用泛型参数 trait bound 来指定所需的行为。让我们回到实例 10-5 修复使用泛型类型参数的 "
        ),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 函数定义！回顾一下，最后尝试编译代码时出现的错误是：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-text extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "error[E0369]: binary operation `>` cannot be applied to type `T`\n --> src/main.rs:5:12\n  |\n5 |         if item > largest {\n  |            ^^^^^^^^^^^^^^\n  |\n  = note: an implementation of `std::cmp::PartialOrd` might be missing for `T`\n"
            )
          ])
        ])
      ]),
      _c("p", [
        _vm._v("在 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 函数体中我们想要使用大于运算符（"),
        _c("code", [_vm._v(">")]),
        _vm._v("）比较两个 "),
        _c("code", [_vm._v("T")]),
        _vm._v(" 类型的值。这个运算符被定义为标准库中 trait "),
        _c("code", [_vm._v("std::cmp::PartialOrd")]),
        _vm._v(" 的一个默认方法。所以需要在 "),
        _c("code", [_vm._v("T")]),
        _vm._v(" 的 trait bound 中指定 "),
        _c("code", [_vm._v("PartialOrd")]),
        _vm._v("，这样 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 函数可以用于任何可以比较大小的类型的 slice。因为 "),
        _c("code", [_vm._v("PartialOrd")]),
        _vm._v(" 位于 prelude 中所以并不需要手动将其引入作用域。将 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 的签名修改为如下：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("fn largest<T: PartialOrd>(list: &[T]) -> T {\n")])
        ])
      ]),
      _c("p", [_vm._v("但是如果编译代码的话，会出现一些不同的错误：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-text extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "error[E0508]: cannot move out of type `[T]`, a non-copy slice\n --> src/main.rs:2:23\n  |\n2 |     let mut largest = list[0];\n  |                       ^^^^^^^\n  |                       |\n  |                       cannot move out of here\n  |                       help: consider using a reference instead: `&list[0]`\n\nerror[E0507]: cannot move out of borrowed content\n --> src/main.rs:4:9\n  |\n4 |     for &item in list.iter() {\n  |         ^----\n  |         ||\n  |         |hint: to prevent move, use `ref item` or `ref mut item`\n  |         cannot move out of borrowed content\n"
            )
          ])
        ])
      ]),
      _c(
        "p",
        [
          _vm._v("错误的核心是 "),
          _c("code", [_vm._v("cannot move out of type [T], a non-copy slice")]),
          _vm._v("，对于非泛型版本的 "),
          _c("code", [_vm._v("largest")]),
          _vm._v(" 函数，我们只尝试了寻找最大的 "),
          _c("code", [_vm._v("i32")]),
          _vm._v(" 和 "),
          _c("code", [_vm._v("char")]),
          _vm._v("。正如第四章 "),
          _c(
            "RouterLink",
            {
              attrs: {
                to: "/ch04-01-what-is-ownership.html#stack-only-data-copy"
              }
            },
            [_vm._v("“只在栈上的数据：拷贝”")]
          ),
          _vm._v("  部分讨论过的，像 "),
          _c("code", [_vm._v("i32")]),
          _vm._v(" 和 "),
          _c("code", [_vm._v("char")]),
          _vm._v(" 这样的类型是已知大小的并可以储存在栈上，所以他们实现了 "),
          _c("code", [_vm._v("Copy")]),
          _vm._v(" trait。当我们将 "),
          _c("code", [_vm._v("largest")]),
          _vm._v(" 函数改成使用泛型后，现在 "),
          _c("code", [_vm._v("list")]),
          _vm._v(" 参数的类型就有可能是没有实现 "),
          _c("code", [_vm._v("Copy")]),
          _vm._v(" trait 的。这意味着我们可能不能将 "),
          _c("code", [_vm._v("list[0]")]),
          _vm._v(" 的值移动到 "),
          _c("code", [_vm._v("largest")]),
          _vm._v(" 变量中，这导致了上面的错误。")
        ],
        1
      ),
      _vm._v(" "),
      _c("p", [
        _vm._v("为了只对实现了 "),
        _c("code", [_vm._v("Copy")]),
        _vm._v(" 的类型调用这些代码，可以在 "),
        _c("code", [_vm._v("T")]),
        _vm._v(" 的 trait bounds 中增加 "),
        _c("code", [_vm._v("Copy")]),
        _vm._v("！示例 10-15 中展示了一个可以编译的泛型版本的 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 函数的完整代码，只要传递给 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 的 slice 值的类型实现了 "),
        _c("code", [_vm._v("PartialOrd")]),
        _vm._v(" "),
        _c("strong", [_vm._v("和")]),
        _vm._v(" "),
        _c("code", [_vm._v("Copy")]),
        _vm._v(" 这两个 trait，例如 "),
        _c("code", [_vm._v("i32")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("char")]),
        _vm._v("：")
      ]),
      _vm._v(" "),
      _c("p", [
        _c("span", { staticClass: "filename" }, [_vm._v("文件名: src/main.rs")])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-rust" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("largest")]
            ),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("PartialOrd")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Copy")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("list"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("mut")
            ]),
            _vm._v(" largest "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" list"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("0")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("for")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _vm._v("item "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("in")
            ]),
            _vm._v(" list"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("iter")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n        "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("if")
            ]),
            _vm._v(" item "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" largest "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n            largest "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" item"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n        "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n    largest\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("main")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" number_list "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("vec!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("34")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("50")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("25")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("100")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("65")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" result "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("largest")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _vm._v("number_list"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n    "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("println!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"The largest number is {}"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" result"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" char_list "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("vec!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token char string" } }, [
              _vm._v("'y'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token char string" } }, [
              _vm._v("'m'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token char string" } }, [
              _vm._v("'a'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token char string" } }, [
              _vm._v("'q'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" result "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("largest")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _vm._v("char_list"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n    "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("println!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"The largest char is {}"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" result"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _c("span", { staticClass: "caption" }, [
          _vm._v("示例 10-15：一个可以用于任何实现了 "),
          _c("code", [_vm._v("PartialOrd")]),
          _vm._v(" 和 "),
          _c("code", [_vm._v("Copy")]),
          _vm._v(" trait 的泛型的 "),
          _c("code", [_vm._v("largest")]),
          _vm._v(" 函数")
        ])
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("如果并不希望限制 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 函数只能用于实现了 "),
        _c("code", [_vm._v("Copy")]),
        _vm._v(" trait 的类型，我们可以在 "),
        _c("code", [_vm._v("T")]),
        _vm._v(" 的 trait bounds 中指定 "),
        _c("code", [_vm._v("Clone")]),
        _vm._v(" 而不是 "),
        _c("code", [_vm._v("Copy")]),
        _vm._v("。并克隆 slice 的每一个值使得 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 函数拥有其所有权。使用 "),
        _c("code", [_vm._v("clone")]),
        _vm._v(" 函数意味着对于类似 "),
        _c("code", [_vm._v("String")]),
        _vm._v(
          " 这样拥有堆上数据的类型，会潜在的分配更多堆上空间，而堆分配在涉及大量数据时可能会相当缓慢。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("另一种 "),
        _c("code", [_vm._v("largest")]),
        _vm._v(" 的实现方式是返回在 slice 中 "),
        _c("code", [_vm._v("T")]),
        _vm._v(" 值的引用。如果我们将函数返回值从 "),
        _c("code", [_vm._v("T")]),
        _vm._v(" 改为 "),
        _c("code", [_vm._v("&T")]),
        _vm._v(" 并改变函数体使其能够返回一个引用，我们将不需要任何 "),
        _c("code", [_vm._v("Clone")]),
        _vm._v(" 或 "),
        _c("code", [_vm._v("Copy")]),
        _vm._v(
          " 的 trait bounds 而且也不会有任何的堆分配。尝试自己实现这种替代解决方式吧！"
        )
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "使用-trait-bound-有条件地实现方法" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#使用-trait-bound-有条件地实现方法" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 使用 trait bound 有条件地实现方法")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("通过使用带有 trait bound 的泛型参数的 "),
        _c("code", [_vm._v("impl")]),
        _vm._v(
          " 块，可以有条件地只为那些实现了特定 trait 的类型实现方法。例如，示例 10-16 中的类型 "
        ),
        _c("code", [_vm._v("Pair<T>")]),
        _vm._v(" 总是实现了 "),
        _c("code", [_vm._v("new")]),
        _vm._v(" 方法，不过只有那些为 "),
        _c("code", [_vm._v("T")]),
        _vm._v(" 类型实现了 "),
        _c("code", [_vm._v("PartialOrd")]),
        _vm._v(" trait （来允许比较） "),
        _c("strong", [_vm._v("和")]),
        _vm._v(" "),
        _c("code", [_vm._v("Display")]),
        _vm._v(" trait （来启用打印）的 "),
        _c("code", [_vm._v("Pair<T>")]),
        _vm._v(" 才会实现 "),
        _c("code", [_vm._v("cmp_display")]),
        _vm._v(" 方法：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-rust" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("use")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token namespace" } }, [
              _vm._v("std"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v("::")
              ]),
              _vm._v("fmt"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v("::")
              ])
            ]),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Display")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("struct")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token type-definition class-name" }
              },
              [_vm._v("Pair")]
            ),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    x"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    y"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("impl")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Pair")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("new")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("x"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" y"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("->")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("Self")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n        "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("Self")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n            x"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n            y"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n        "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("impl")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Display")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("PartialOrd")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Pair")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("T")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("fn")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-definition function" }
              },
              [_vm._v("cmp_display")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n        "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("if")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("x "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("y "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n            "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("println!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"The largest member is x = {}"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("x"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n        "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("else")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n            "),
            _c(
              "span",
              { pre: true, attrs: { class: "token macro property" } },
              [_vm._v("println!")]
            ),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"The largest member is y = {}"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("self")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("y"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n        "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _c("span", { staticClass: "caption" }, [
          _vm._v("示例 10-16：根据 trait bound 在泛型上有条件的实现方法")
        ])
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "也可以对任何实现了特定 trait 的类型有条件地实现 trait。对任何满足特定 trait bound 的类型实现 trait 被称为 "
        ),
        _c("em", [_vm._v("blanket implementations")]),
        _vm._v("，他们被广泛的用于 Rust 标准库中。例如，标准库为任何实现了 "),
        _c("code", [_vm._v("Display")]),
        _vm._v(" trait 的类型实现了 "),
        _c("code", [_vm._v("ToString")]),
        _vm._v(" trait。这个 "),
        _c("code", [_vm._v("impl")]),
        _vm._v(" 块看起来像这样：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust,ignore extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v("impl<T: Display> ToString for T {\n    // --snip--\n}\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v(
          "因为标准库有了这些 blanket implementation，我们可以对任何实现了 "
        ),
        _c("code", [_vm._v("Display")]),
        _vm._v(" trait 的类型调用由 "),
        _c("code", [_vm._v("ToString")]),
        _vm._v(" 定义的 "),
        _c("code", [_vm._v("to_string")]),
        _vm._v(" 方法。例如，可以将整型转换为对应的 "),
        _c("code", [_vm._v("String")]),
        _vm._v(" 值，因为整型实现了 "),
        _c("code", [_vm._v("Display")]),
        _vm._v("：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-rust extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-rust" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" s "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("to_string")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v(
          "blanket implementation 会出现在 trait 文档的 “Implementers” 部分。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "trait 和 trait bound 让我们使用泛型类型参数来减少重复，并仍然能够向编译器明确指定泛型类型需要拥有哪些行为。因为我们向编译器提供了 trait bound 信息，它就可以检查代码中所用到的具体类型是否提供了正确的行为。在动态类型语言中，如果我们尝试调用一个类型并没有实现的方法，会在运行时出现错误。Rust 将这些错误移动到了编译时，甚至在代码能够运行之前就强迫我们修复错误。另外，我们也无需编写运行时检查行为的代码，因为在编译时就已经检查过了，这样相比其他那些不愿放弃泛型灵活性的语言有更好的性能。"
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "这里还有一种泛型，我们一直在使用它甚至都没有察觉它的存在，这就是 "
        ),
        _c("strong", [_vm._v("生命周期")]),
        _vm._v("（"),
        _c("em", [_vm._v("lifetimes")]),
        _vm._v(
          "）。不同于其他泛型帮助我们确保类型拥有期望的行为，生命周期则有助于确保引用在我们需要他们的时候一直有效。让我们学习生命周期是如何做到这些的。"
        )
      ])
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}